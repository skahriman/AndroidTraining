Week 3 Test Friday

1. Sort the array with multiple same values in the array in an ascending order. 
Input: {2,8,9,3,4,3,2,6,6,2,4,9,8}
Output: {2,2,2,3,3,4,4,6,6,8,8,9,9}
2. Say you have a string of characters. Write an algorithm to collect and return a list of all substrings such that order is maintained but characters may be skipped. So “frog” can produce fog, fg, rg, etc.
3. Create a program which checks if the string has the correct order of parenthesis/brackets. ({})[] = true, []{]}[ = false
4. Given a string and a non-empty substring sub, compute recursively if at least n copies of sub appear in the string somewhere, possibly with overlapping. N will be non-negative.

strCopies("catcowcat", "cat", 2) → true
strCopies("catcowcat", "cow", 2) → false
strCopies("catcowcat", "cow", 1) → true